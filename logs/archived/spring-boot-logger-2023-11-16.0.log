2023-11-16 21:25:34,582 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:25:34,616 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 24000 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:25:34,616 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:25:34,648 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:25:34,648 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:25:35,207 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:25:35,254 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 42 ms. Found 2 JPA repository interfaces.
2023-11-16 21:25:36,677 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:25:36,678 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:25:36,678 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:25:36,684 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:25:36,690 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:25:36,692 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:25:36,692 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:25:36,744 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:25:36,744 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2095 ms
2023-11-16 21:25:36,769 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:25:36,770 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:25:36,770 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:25:36,934 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@24828b2c
2023-11-16 21:25:36,935 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:25:36,942 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:25:37,042 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:25:37,099 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:25:37,100 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:25:37,223 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:25:37,334 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:25:37,581 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:25:38,096 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:25:38,099 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:25:38,196 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:25:38,197 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:25:38,239 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:25:38,293 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:25:38,294 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:25:38,358 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:25:38,621 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:25:38,632 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:25:38,646 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:25:38,653 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 4.479 seconds (process running for 5.427)
2023-11-16 21:25:38,769 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 105
2023-11-16 21:25:38,771 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 2
2023-11-16 21:25:40,542 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 1769
2023-11-16 21:25:40,676 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 134
2023-11-16 21:25:40,784 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 102
2023-11-16 21:25:41,265 INFO org.hibernate.engine.jdbc.batch.internal.BatchImpl [restartedMain] HHH100503: On release of batch it still contained JDBC statements
2023-11-16 21:25:41,266 ERROR org.hibernate.engine.jdbc.batch.internal.BatchImpl [restartedMain] HHH100501: Exception executing batch [java.sql.BatchUpdateException: Batch entry 30 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SPORTS','ISBN-8335351',1080,'1941-01-01 +02','Publisher-23','Title-941',200082) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-8335351) already exists.  Call getNextException to see other errors in the batch.], SQL: insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)
2023-11-16 21:25:41,266 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] SQL Error: 0, SQLState: 23505
2023-11-16 21:25:41,266 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] Batch entry 30 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SPORTS','ISBN-8335351',1080,'1941-01-01 +02','Publisher-23','Title-941',200082) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-8335351) already exists.  Call getNextException to see other errors in the batch.
2023-11-16 21:25:41,266 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-8335351) already exists.
2023-11-16 21:25:41,284 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    913700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    8811900 nanoseconds spent preparing 2201 JDBC statements;
    1159482500 nanoseconds spent executing 2200 JDBC statements;
    54084800 nanoseconds spent executing 2 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    482404700 nanoseconds spent executing 1 flushes (flushing a total of 110000 entities and 110000 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:25:41,286 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:25:41,298 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:319)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springpractice.SpringPracticeApplication.main(SpringPracticeApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute batch [Batch entry 30 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SPORTS','ISBN-8335351',1080,'1941-01-01 +02','Publisher-23','Title-941',200082) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-8335351) already exists.  Call getNextException to see other errors in the batch.] [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]; SQL [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]; constraint [books_isbn_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.springpractice.config.DBInitializer$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:771)
	... 10 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute batch [Batch entry 30 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SPORTS','ISBN-8335351',1080,'1941-01-01 +02','Publisher-23','Title-941',200082) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-8335351) already exists.  Call getNextException to see other errors in the batch.] [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:289)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:262)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.addToBatch(BatchImpl.java:152)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleBatched.performBatchedOperations(MutationExecutorSingleBatched.java:60)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:169)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:111)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2762)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:633)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:358)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 20 common frames omitted
Caused by: java.sql.BatchUpdateException: Batch entry 30 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SPORTS','ISBN-8335351',1080,'1941-01-01 +02','Publisher-23','Title-941',200082) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-8335351) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2402)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:574)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:275)
	... 43 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-8335351) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	... 50 common frames omitted
2023-11-16 21:25:41,316 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:25:41,319 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:25:41,456 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:26:03,158 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:26:03,191 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 24540 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:26:03,192 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:26:03,231 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:26:03,232 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:26:03,704 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:26:03,752 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 42 ms. Found 2 JPA repository interfaces.
2023-11-16 21:26:04,209 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:26:04,209 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:26:04,210 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:26:04,212 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:26:04,217 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:26:04,219 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:26:04,219 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:26:04,264 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:26:04,264 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1032 ms
2023-11-16 21:26:04,290 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:26:04,290 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:26:04,290 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:26:04,397 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:26:04,399 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:26:04,407 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:26:04,504 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:26:04,541 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:26:04,543 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:26:04,624 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:26:04,708 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:26:04,906 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:26:05,362 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:26:05,364 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:26:05,460 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:05,460 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:05,501 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:05,553 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:05,554 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:05,619 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:26:05,882 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:26:05,896 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:26:05,919 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:26:05,926 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.133 seconds (process running for 3.662)
2023-11-16 21:26:05,945 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 8
2023-11-16 21:26:05,951 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 5
2023-11-16 21:26:06,224 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 272
2023-11-16 21:26:06,434 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 210
2023-11-16 21:26:06,539 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 98
2023-11-16 21:26:06,658 INFO org.hibernate.engine.jdbc.batch.internal.BatchImpl [restartedMain] HHH100503: On release of batch it still contained JDBC statements
2023-11-16 21:26:06,658 ERROR org.hibernate.engine.jdbc.batch.internal.BatchImpl [restartedMain] HHH100501: Exception executing batch [java.sql.BatchUpdateException: Batch entry 0 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SCIENCE','ISBN-1498896',1411,'1937-01-01 +02'::date,'Publisher-1','Title-692',300002) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-1498896) already exists.  Call getNextException to see other errors in the batch.], SQL: insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)
2023-11-16 21:26:06,659 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] SQL Error: 0, SQLState: 23505
2023-11-16 21:26:06,659 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] Batch entry 0 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SCIENCE','ISBN-1498896',1411,'1937-01-01 +02'::date,'Publisher-1','Title-692',300002) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-1498896) already exists.  Call getNextException to see other errors in the batch.
2023-11-16 21:26:06,659 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-1498896) already exists.
2023-11-16 21:26:06,670 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    810800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    7306900 nanoseconds spent preparing 401 JDBC statements;
    275715900 nanoseconds spent executing 400 JDBC statements;
    10124600 nanoseconds spent executing 1 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    120507000 nanoseconds spent executing 1 flushes (flushing a total of 20000 entities and 20000 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:06,673 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:26:06,685 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:319)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springpractice.SpringPracticeApplication.main(SpringPracticeApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute batch [Batch entry 0 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SCIENCE','ISBN-1498896',1411,'1937-01-01 +02'::date,'Publisher-1','Title-692',300002) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-1498896) already exists.  Call getNextException to see other errors in the batch.] [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]; SQL [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]; constraint [books_isbn_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.springpractice.config.DBInitializer$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:771)
	... 10 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute batch [Batch entry 0 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SCIENCE','ISBN-1498896',1411,'1937-01-01 +02'::date,'Publisher-1','Title-692',300002) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-1498896) already exists.  Call getNextException to see other errors in the batch.] [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:289)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:262)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.addToBatch(BatchImpl.java:152)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleBatched.performBatchedOperations(MutationExecutorSingleBatched.java:60)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:169)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:111)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2762)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:633)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:358)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 20 common frames omitted
Caused by: java.sql.BatchUpdateException: Batch entry 0 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('SCIENCE','ISBN-1498896',1411,'1937-01-01 +02'::date,'Publisher-1','Title-692',300002) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-1498896) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2402)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:574)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:275)
	... 43 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-1498896) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	... 50 common frames omitted
2023-11-16 21:26:06,702 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:26:06,704 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:26:06,717 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:26:25,318 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:26:25,344 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25540 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:26:25,345 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:26:25,376 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:26:25,376 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:26:25,832 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:26:25,871 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2023-11-16 21:26:26,393 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:26:26,394 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:26:26,394 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:26:26,398 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:26:26,411 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:26:26,412 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:26:26,413 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:26:26,465 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:26:26,465 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1089 ms
2023-11-16 21:26:26,494 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:26:26,494 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:26:26,494 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:26:26,608 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:26:26,609 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:26:26,617 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:26:26,719 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:26:26,760 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:26:26,762 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:26:26,865 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:26:26,964 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:26:27,243 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:26:27,740 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:26:27,744 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:26:27,839 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:27,841 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:27,880 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:27,934 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:27,934 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:28,011 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:26:28,315 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:26:28,331 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:26:28,350 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:26:28,359 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.388 seconds (process running for 3.869)
2023-11-16 21:26:28,373 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:26:28,374 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:26:28,412 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 37
2023-11-16 21:26:28,420 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:26:28,437 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 21:26:28,505 INFO org.hibernate.engine.jdbc.batch.internal.BatchImpl [restartedMain] HHH100503: On release of batch it still contained JDBC statements
2023-11-16 21:26:28,506 ERROR org.hibernate.engine.jdbc.batch.internal.BatchImpl [restartedMain] HHH100501: Exception executing batch [java.sql.BatchUpdateException: Batch entry 5 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('ENTERTAINMENT','ISBN-9981097',3718,'1905-01-01 +02','Publisher-25','Title-569',310057) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-9981097) already exists.  Call getNextException to see other errors in the batch.], SQL: insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)
2023-11-16 21:26:28,506 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] SQL Error: 0, SQLState: 23505
2023-11-16 21:26:28,506 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] Batch entry 5 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('ENTERTAINMENT','ISBN-9981097',3718,'1905-01-01 +02','Publisher-25','Title-569',310057) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-9981097) already exists.  Call getNextException to see other errors in the batch.
2023-11-16 21:26:28,507 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-9981097) already exists.
2023-11-16 21:26:28,512 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1311200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    369900 nanoseconds spent preparing 5 JDBC statements;
    5385600 nanoseconds spent executing 4 JDBC statements;
    34880200 nanoseconds spent executing 2 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    70276300 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:26:28,515 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:26:28,531 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:319)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springpractice.SpringPracticeApplication.main(SpringPracticeApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute batch [Batch entry 5 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('ENTERTAINMENT','ISBN-9981097',3718,'1905-01-01 +02','Publisher-25','Title-569',310057) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-9981097) already exists.  Call getNextException to see other errors in the batch.] [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]; SQL [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]; constraint [books_isbn_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.springpractice.config.DBInitializer$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:771)
	... 10 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute batch [Batch entry 5 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('ENTERTAINMENT','ISBN-9981097',3718,'1905-01-01 +02','Publisher-25','Title-569',310057) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-9981097) already exists.  Call getNextException to see other errors in the batch.] [insert into books (genre,isbn,price,publication_year,publisher,title,id) values (?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:289)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:262)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.addToBatch(BatchImpl.java:152)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleBatched.performBatchedOperations(MutationExecutorSingleBatched.java:60)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:169)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:111)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2762)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:633)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:358)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 20 common frames omitted
Caused by: java.sql.BatchUpdateException: Batch entry 5 insert into books (genre,isbn,price,publication_year,publisher,title,id) values ('ENTERTAINMENT','ISBN-9981097',3718,'1905-01-01 +02','Publisher-25','Title-569',310057) was aborted: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-9981097) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2402)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:574)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:275)
	... 43 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "books_isbn_key"
  Detail: Key (isbn)=(ISBN-9981097) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	... 50 common frames omitted
2023-11-16 21:26:28,552 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:26:28,554 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:26:28,591 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:27:13,435 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:27:13,460 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 22944 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:27:13,461 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:27:13,487 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:27:13,488 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:27:13,902 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:27:13,942 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2023-11-16 21:27:14,363 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:27:14,364 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:27:14,364 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:27:14,367 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:27:14,371 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:27:14,372 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:27:14,373 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:27:14,413 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:27:14,413 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 925 ms
2023-11-16 21:27:14,437 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:27:14,437 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:27:14,437 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:27:14,533 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:27:14,534 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:27:14,541 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:27:14,631 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:27:14,668 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:27:14,670 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:27:14,753 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:27:14,832 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:27:15,026 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:27:15,484 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:27:15,486 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:27:15,580 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:27:15,581 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:27:15,623 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:27:15,675 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:27:15,676 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:27:15,738 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:27:15,983 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:27:15,995 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:27:16,009 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:27:16,016 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.906 seconds (process running for 3.353)
2023-11-16 21:27:16,027 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:27:16,028 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:27:16,061 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 21:27:16,069 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:27:16,082 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 21:27:16,175 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1791000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    379900 nanoseconds spent preparing 6 JDBC statements;
    4005600 nanoseconds spent executing 4 JDBC statements;
    45544400 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    89571800 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:27:58,122 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:27:58,125 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:28:02,963 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:28:04,924 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:28:04,950 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 16936 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:28:04,951 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:28:04,981 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:28:04,982 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:28:05,392 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:28:05,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 35 ms. Found 2 JPA repository interfaces.
2023-11-16 21:28:05,860 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:28:05,861 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:28:05,861 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:28:05,864 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:28:05,868 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:28:05,870 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:28:05,870 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:28:05,911 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:28:05,911 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 929 ms
2023-11-16 21:28:05,934 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:28:05,934 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:28:05,935 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:28:06,035 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:28:06,037 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:28:06,044 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:28:06,136 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:28:06,176 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:28:06,178 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:28:06,266 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:28:06,354 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:28:06,549 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:28:07,051 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:28:07,054 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:28:07,151 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:28:07,152 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:28:07,192 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:28:07,245 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:28:07,245 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:28:07,308 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:28:07,572 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:28:07,586 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:28:07,600 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:28:07,606 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.012 seconds (process running for 3.506)
2023-11-16 21:28:07,617 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:28:07,618 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:28:07,652 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 34
2023-11-16 21:28:07,660 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:28:07,675 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 14
2023-11-16 21:28:07,736 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    973900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    387000 nanoseconds spent preparing 6 JDBC statements;
    4278000 nanoseconds spent executing 4 JDBC statements;
    11243600 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    57513100 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:30:09,989 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:30:09,992 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:30:14,648 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:30:17,954 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:30:17,981 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 21952 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:30:17,982 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:30:18,012 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:30:18,012 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:30:18,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:30:18,476 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 39 ms. Found 2 JPA repository interfaces.
2023-11-16 21:30:18,967 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:30:18,967 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:30:18,968 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:30:18,970 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:30:18,977 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:30:18,978 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:30:18,979 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:30:19,022 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:30:19,022 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1009 ms
2023-11-16 21:30:19,046 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:30:19,047 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:30:19,047 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:30:19,151 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:30:19,152 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:30:19,160 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:30:19,254 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:30:19,292 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:30:19,294 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:30:19,384 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:30:19,478 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:30:19,719 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:30:20,263 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:30:20,266 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:30:20,372 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:30:20,373 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:30:20,423 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:30:20,495 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:30:20,497 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:30:20,581 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:30:20,876 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:30:20,888 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:30:20,902 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:30:20,909 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.336 seconds (process running for 3.795)
2023-11-16 21:30:20,919 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:30:20,920 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:30:20,952 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 21:30:20,960 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:30:20,976 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 21:30:21,036 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    692300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    376400 nanoseconds spent preparing 6 JDBC statements;
    4897000 nanoseconds spent executing 4 JDBC statements;
    11367000 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    56463400 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:08,445 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:32:08,450 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:32:12,891 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:32:16,763 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:32:16,797 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 18944 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:32:16,798 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:32:16,834 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:32:16,834 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:32:17,330 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:32:17,377 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 41 ms. Found 2 JPA repository interfaces.
2023-11-16 21:32:17,955 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:32:17,957 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:32:17,958 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:32:17,964 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:32:17,976 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:32:17,979 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:32:17,980 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:32:18,062 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:32:18,063 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1229 ms
2023-11-16 21:32:18,095 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:32:18,095 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:32:18,096 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:32:18,222 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:32:18,224 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:32:18,232 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:32:18,331 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:32:18,386 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:32:18,388 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:32:18,491 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:32:18,594 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:32:18,816 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:32:19,371 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:32:19,373 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:32:19,490 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:19,492 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:19,546 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:19,614 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:19,615 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:19,686 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:32:19,956 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:32:19,969 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:32:19,983 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:32:19,990 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.623 seconds (process running for 4.15)
2023-11-16 21:32:20,002 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 0
2023-11-16 21:32:20,002 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:32:20,037 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 35
2023-11-16 21:32:20,046 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 21:32:20,060 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 21:32:20,125 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1008400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    389700 nanoseconds spent preparing 6 JDBC statements;
    5065600 nanoseconds spent executing 4 JDBC statements;
    13092500 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    61183100 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:32,424 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:32:32,426 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:32:36,667 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:32:39,901 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:32:39,930 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 12500 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:32:39,931 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:32:39,960 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:32:39,961 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:32:40,383 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:32:40,421 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 21:32:40,847 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:32:40,847 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:32:40,847 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:32:40,850 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:32:40,855 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:32:40,856 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:32:40,856 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:32:40,898 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:32:40,899 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 937 ms
2023-11-16 21:32:40,927 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:32:40,928 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:32:40,928 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:32:41,042 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:32:41,043 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:32:41,053 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:32:41,152 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:32:41,187 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:32:41,188 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:32:41,283 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:32:41,386 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:32:41,596 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:32:42,072 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:32:42,075 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:32:42,178 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:42,178 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:42,219 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:42,277 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:42,278 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:32:42,344 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:32:42,621 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:32:42,632 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:32:42,646 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:32:42,653 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.074 seconds (process running for 3.486)
2023-11-16 21:32:42,664 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:32:42,665 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:32:42,698 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 21:32:42,708 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 10
2023-11-16 21:32:42,721 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 21:32:42,794 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1254900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    437600 nanoseconds spent preparing 6 JDBC statements;
    4593900 nanoseconds spent executing 4 JDBC statements;
    12805100 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    68804200 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:02,071 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:34:02,073 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:34:04,611 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:34:07,764 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:34:07,791 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 21640 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:34:07,792 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:34:07,823 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:34:07,823 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:34:08,230 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:34:08,268 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 21:34:08,675 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:34:08,676 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:34:08,676 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:34:08,678 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:34:08,684 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:34:08,685 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:34:08,685 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:34:08,727 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:34:08,728 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 904 ms
2023-11-16 21:34:08,751 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:34:08,752 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:34:08,752 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:34:08,844 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d642d7b
2023-11-16 21:34:08,846 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:34:08,852 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:34:08,936 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:34:08,971 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:34:08,973 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:34:09,056 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:34:09,138 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:34:09,331 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:34:09,801 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:34:09,803 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:34:09,906 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:09,907 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:09,946 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:09,995 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:09,996 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:10,063 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:34:10,314 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:34:10,325 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:34:10,341 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:34:10,348 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.896 seconds (process running for 3.313)
2023-11-16 21:34:10,360 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:34:10,360 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:34:10,394 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 21:34:10,403 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 21:34:10,419 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 21:34:10,481 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    862900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    352400 nanoseconds spent preparing 6 JDBC statements;
    3995500 nanoseconds spent executing 4 JDBC statements;
    11373400 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    58179800 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:20,581 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:34:20,583 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:34:22,193 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:34:25,154 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:34:25,179 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 27228 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:34:25,179 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:34:25,209 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:34:25,209 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:34:25,608 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:34:25,644 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 31 ms. Found 2 JPA repository interfaces.
2023-11-16 21:34:26,045 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:34:26,045 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:34:26,045 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:34:26,048 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:34:26,053 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:34:26,054 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:34:26,054 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:34:26,097 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:34:26,098 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 888 ms
2023-11-16 21:34:26,121 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:34:26,122 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:34:26,122 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:34:26,214 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:34:26,215 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:34:26,222 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:34:26,302 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:34:26,336 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:34:26,338 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:34:26,423 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:34:26,504 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:34:26,697 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:34:27,158 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:34:27,160 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:34:27,249 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:27,249 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:27,302 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:27,356 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:27,357 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:27,418 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:34:27,691 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:34:27,702 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:34:27,719 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:34:27,726 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.891 seconds (process running for 3.32)
2023-11-16 21:34:27,739 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:34:27,740 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:34:27,773 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 21:34:27,782 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:34:27,839 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1491000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    364600 nanoseconds spent preparing 6 JDBC statements;
    3931200 nanoseconds spent executing 4 JDBC statements;
    10877300 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    53789200 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:34:58,778 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:34:58,780 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:34:59,621 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:35:02,907 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:35:02,932 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 24544 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:35:02,932 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:35:02,961 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:35:02,961 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:35:03,364 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:35:03,404 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 35 ms. Found 2 JPA repository interfaces.
2023-11-16 21:35:03,815 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:35:03,816 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:35:03,816 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:35:03,819 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:35:03,824 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:35:03,825 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:35:03,825 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:35:03,863 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:35:03,864 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 903 ms
2023-11-16 21:35:03,896 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:35:03,897 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:35:03,897 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:35:03,995 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:35:03,997 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:35:04,003 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:35:04,090 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:35:04,125 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:35:04,127 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:35:04,208 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:35:04,288 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:35:04,474 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:35:04,915 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:35:04,917 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:35:05,005 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:35:05,005 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:35:05,043 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:35:05,097 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:35:05,098 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:35:05,155 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:35:05,397 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:35:05,407 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:35:05,421 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:35:05,427 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.843 seconds (process running for 3.258)
2023-11-16 21:35:05,438 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:35:05,439 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:35:05,469 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 30
2023-11-16 21:35:05,483 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 21:35:05,541 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1089500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    342400 nanoseconds spent preparing 6 JDBC statements;
    4201100 nanoseconds spent executing 4 JDBC statements;
    11579200 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    54479800 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:37:40,553 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:37:40,556 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:37:42,703 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:37:45,921 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:37:45,946 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 28060 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:37:45,947 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:37:45,977 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:37:45,977 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:37:46,380 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:37:46,418 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 21:37:46,827 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:37:46,828 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:37:46,828 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:37:46,831 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:37:46,836 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:37:46,836 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:37:46,836 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:37:46,878 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:37:46,878 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 901 ms
2023-11-16 21:37:46,900 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:37:46,900 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:37:46,900 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:37:46,996 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d642d7b
2023-11-16 21:37:46,997 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:37:47,004 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:37:47,085 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:37:47,121 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:37:47,122 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:37:47,207 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:37:47,293 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:37:47,480 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:37:47,936 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:37:47,938 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:37:48,028 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:37:48,029 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:37:48,090 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:37:48,148 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:37:48,150 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:37:48,225 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:37:48,472 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:37:48,482 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:37:48,497 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:37:48,504 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.898 seconds (process running for 3.343)
2023-11-16 21:37:48,514 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:37:48,515 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:37:48,548 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 21:37:48,563 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 14
2023-11-16 21:37:48,623 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1007600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    384700 nanoseconds spent preparing 6 JDBC statements;
    4668400 nanoseconds spent executing 4 JDBC statements;
    10305400 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    55566500 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:39:33,672 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:39:33,674 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:39:35,582 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:39:38,748 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:39:38,777 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25056 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:39:38,778 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:39:38,813 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:39:38,813 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:39:39,279 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:39:39,317 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 21:39:39,805 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:39:39,806 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:39:39,806 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:39:39,810 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:39:39,815 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:39:39,817 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:39:39,817 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:39:39,865 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:39:39,865 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1051 ms
2023-11-16 21:39:39,893 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:39:39,893 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:39:39,893 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:39:40,006 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:39:40,007 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:39:40,016 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:39:40,106 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:39:40,139 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:39:40,140 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:39:40,224 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:39:40,307 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:39:40,503 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:39:40,945 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:39:40,947 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:39:41,033 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:39:41,034 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:39:41,075 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:39:41,126 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:39:41,127 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:39:41,200 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:39:41,445 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:39:41,456 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:39:41,470 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:39:41,477 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.054 seconds (process running for 3.473)
2023-11-16 21:39:41,487 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:39:41,488 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:39:41,520 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 21:39:41,528 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    814300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    107300 nanoseconds spent preparing 2 JDBC statements;
    2429500 nanoseconds spent executing 2 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:39:41,530 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:39:41,544 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.StackOverflowError: null
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:120)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
2023-11-16 21:39:41,563 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:39:41,565 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:39:41,574 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:40:07,672 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:40:07,698 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 15920 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:40:07,698 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:40:07,730 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:40:07,730 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:40:08,135 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:40:08,173 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 21:40:08,582 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:40:08,583 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:40:08,583 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:40:08,586 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:40:08,590 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:40:08,591 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:40:08,591 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:40:08,634 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:40:08,635 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 904 ms
2023-11-16 21:40:08,656 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:40:08,656 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:40:08,656 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:40:08,760 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:40:08,761 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:40:08,770 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:40:08,863 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:40:08,901 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:40:08,903 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:40:09,004 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:40:09,107 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:40:09,324 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:40:09,809 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:40:09,816 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:40:09,915 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:09,916 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:09,960 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:10,016 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:10,017 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:10,081 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:40:10,326 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:40:10,338 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:40:10,356 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:40:10,363 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.02 seconds (process running for 3.493)
2023-11-16 21:40:10,376 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:40:10,377 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:40:10,413 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 36
2023-11-16 21:40:10,421 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1128400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    134500 nanoseconds spent preparing 2 JDBC statements;
    2949700 nanoseconds spent executing 2 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:10,423 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:40:10,436 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.StackOverflowError: null
	at java.base/java.util.HashMap$KeyIterator.<init>(HashMap.java:1618)
	at java.base/java.util.HashMap$KeySet.iterator(HashMap.java:983)
	at java.base/java.util.HashSet.iterator(HashSet.java:174)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:120)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
2023-11-16 21:40:10,458 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:40:10,461 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:40:10,473 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:40:30,440 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:40:30,465 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 24776 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:40:30,466 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:40:30,494 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:40:30,494 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:40:30,914 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:40:30,953 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 21:40:31,380 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:40:31,381 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:40:31,381 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:40:31,384 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:40:31,389 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:40:31,392 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:40:31,392 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:40:31,443 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:40:31,443 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 948 ms
2023-11-16 21:40:31,474 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:40:31,474 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:40:31,474 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:40:31,587 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:40:31,589 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:40:31,598 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:40:31,695 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:40:31,742 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:40:31,744 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:40:31,827 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:40:31,911 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:40:32,095 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:40:32,523 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:40:32,525 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:40:32,616 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:32,616 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:32,668 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:32,719 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:32,720 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:32,781 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:40:33,030 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:40:33,041 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:40:33,057 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:40:33,064 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.938 seconds (process running for 3.347)
2023-11-16 21:40:33,074 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:40:33,075 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:40:33,108 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 21:40:33,116 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    654600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    114200 nanoseconds spent preparing 2 JDBC statements;
    2703100 nanoseconds spent executing 2 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:40:33,118 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:40:33,130 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.StackOverflowError: null
	at java.base/java.util.HashSet.iterator(HashSet.java:174)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:120)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
2023-11-16 21:40:33,149 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:40:33,151 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:40:33,177 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:41:22,552 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:41:22,578 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 26144 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:41:22,579 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:41:22,610 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:41:22,610 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:41:23,017 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:41:23,054 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 21:41:23,455 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:41:23,456 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:41:23,456 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:41:23,459 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:41:23,464 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:41:23,465 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:41:23,465 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:41:23,507 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:41:23,507 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 897 ms
2023-11-16 21:41:23,530 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:41:23,530 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:41:23,530 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:41:23,623 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:41:23,625 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:41:23,632 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:41:23,713 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:41:23,750 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:41:23,752 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:41:23,837 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:41:23,921 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:41:24,117 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:41:24,547 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:41:24,549 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:41:24,632 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:41:24,632 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:41:24,671 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:41:24,723 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:41:24,724 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:41:24,781 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:41:25,027 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:41:25,036 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:41:25,050 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:41:25,057 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.82 seconds (process running for 3.244)
2023-11-16 21:41:25,067 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:41:25,068 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 1
2023-11-16 21:41:25,099 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 31
2023-11-16 21:41:25,107 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 7
2023-11-16 21:41:25,161 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1138600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    339800 nanoseconds spent preparing 6 JDBC statements;
    3832600 nanoseconds spent executing 4 JDBC statements;
    10212700 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    50433600 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:43:08,106 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:43:08,109 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:43:12,176 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:43:15,248 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:43:15,273 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 22672 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:43:15,274 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:43:15,302 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:43:15,303 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:43:15,722 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:43:15,758 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 31 ms. Found 2 JPA repository interfaces.
2023-11-16 21:43:16,163 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:43:16,163 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:43:16,163 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:43:16,167 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:43:16,171 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:43:16,172 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:43:16,173 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:43:16,215 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:43:16,215 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 912 ms
2023-11-16 21:43:16,237 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:43:16,237 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:43:16,237 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:43:16,329 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44e5efe1
2023-11-16 21:43:16,330 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:43:16,337 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:43:16,416 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:43:16,450 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:43:16,451 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:43:16,534 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:43:16,614 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:43:16,802 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:43:17,224 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:43:17,227 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:43:17,309 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:43:17,309 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:43:17,347 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:43:17,390 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:43:17,391 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:43:17,456 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:43:17,703 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:43:17,714 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:43:17,728 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:43:17,735 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.805 seconds (process running for 3.215)
2023-11-16 21:43:17,745 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:43:17,745 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:43:17,777 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 31
2023-11-16 21:43:17,785 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:43:17,840 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1039400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    351700 nanoseconds spent preparing 6 JDBC statements;
    3871400 nanoseconds spent executing 4 JDBC statements;
    10354100 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    51483200 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:44:10,932 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:44:10,934 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:44:14,767 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:44:17,849 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:44:17,880 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25872 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:44:17,881 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:44:17,915 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:44:17,916 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:44:18,398 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:44:18,437 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2023-11-16 21:44:18,859 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:44:18,860 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:44:18,860 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:44:18,863 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:44:18,867 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:44:18,868 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:44:18,869 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:44:18,915 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:44:18,915 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 999 ms
2023-11-16 21:44:18,937 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:44:18,937 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:44:18,937 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:44:19,031 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d642d7b
2023-11-16 21:44:19,032 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:44:19,039 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:44:19,119 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:44:19,154 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:44:19,155 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:44:19,241 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:44:19,324 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:44:19,513 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:44:19,949 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:44:20,031 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:44:20,123 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:44:20,124 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:44:20,170 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:44:20,218 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:44:20,219 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:44:20,278 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:44:20,528 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:44:20,539 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:44:20,553 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:44:20,560 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.065 seconds (process running for 3.482)
2023-11-16 21:44:20,571 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:44:20,571 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:44:20,604 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 21:44:20,613 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 21:44:20,626 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 21:44:20,684 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    972500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    422700 nanoseconds spent preparing 8 JDBC statements;
    6070700 nanoseconds spent executing 6 JDBC statements;
    10840400 nanoseconds spent executing 4 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    54830300 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:45:52,536 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:45:52,551 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:45:52,593 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:46:55,886 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:46:55,911 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 12312 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:46:55,912 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:46:55,941 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:46:55,941 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:46:56,379 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:46:56,416 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 21:46:56,892 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:46:56,893 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:46:56,893 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:46:56,896 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:46:56,902 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:46:56,903 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:46:56,903 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:46:56,953 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:46:56,953 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1012 ms
2023-11-16 21:46:56,985 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:46:56,985 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:46:56,985 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:46:57,098 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d642d7b
2023-11-16 21:46:57,100 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:46:57,110 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:46:57,206 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:46:57,238 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:46:57,240 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:46:57,322 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:46:57,405 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:46:57,590 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:46:58,028 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:46:58,042 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:46:58,042 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:46:58,043 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:46:58,043 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:46:58,044 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:46:58,044 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:46:58,045 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:46:58,045 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:46:58,046 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:46:58,046 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:46:58,047 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:46:58,047 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:46:58,047 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:46:58,047 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:46:58,084 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:46:58,186 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:46:58,187 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:46:58,230 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:46:58,282 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:46:58,282 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:46:58,344 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:46:58,596 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:46:58,606 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:46:58,622 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:46:58,628 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.053 seconds (process running for 3.468)
2023-11-16 21:46:58,639 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 0
2023-11-16 21:46:58,639 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:46:58,671 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 21:46:58,680 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:46:58,693 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 21:46:58,769 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    937300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    428400 nanoseconds spent preparing 9 JDBC statements;
    5495200 nanoseconds spent executing 6 JDBC statements;
    21106600 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    71710500 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:50:29,653 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:50:29,671 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:50:30,932 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:50:34,429 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:50:34,455 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 24952 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:50:34,456 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:50:34,486 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:50:34,487 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:50:34,902 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:50:34,940 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 21:50:35,371 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:50:35,372 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:50:35,372 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:50:35,375 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:50:35,380 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:50:35,381 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:50:35,382 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:50:35,423 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:50:35,424 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 936 ms
2023-11-16 21:50:35,450 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:50:35,450 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:50:35,450 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:50:35,549 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b43e3ee
2023-11-16 21:50:35,550 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:50:35,558 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:50:35,644 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:50:35,680 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:50:35,682 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:50:35,765 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:50:35,848 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:50:36,036 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:50:36,469 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:50:36,482 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:50:36,482 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:50:36,483 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:50:36,483 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:50:36,484 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:50:36,484 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:50:36,485 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:50:36,485 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:50:36,486 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:50:36,486 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:50:36,487 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:50:36,487 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:50:36,487 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:50:36,488 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:50:36,516 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:50:36,609 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:50:36,610 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:50:36,652 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:50:36,700 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:50:36,700 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:50:36,757 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:50:36,997 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:50:37,009 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:50:37,021 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:50:37,028 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.936 seconds (process running for 3.367)
2023-11-16 21:50:37,038 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:50:37,039 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:50:37,043 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1092100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:50:37,045 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:50:37,057 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.StackOverflowError: null
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:120)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
2023-11-16 21:50:37,075 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:50:37,090 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:50:37,103 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:51:04,942 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:51:04,967 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 22412 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:51:04,968 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:51:04,997 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:51:04,997 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:51:05,396 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:51:05,433 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 21:51:05,835 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:51:05,836 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:51:05,836 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:51:05,839 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:51:05,843 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:51:05,844 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:51:05,845 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:51:05,885 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:51:05,885 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 888 ms
2023-11-16 21:51:05,910 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:51:05,911 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:51:05,911 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:51:06,007 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:51:06,008 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:51:06,015 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:51:06,095 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:51:06,130 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:51:06,132 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:51:06,215 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:51:06,299 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:51:06,488 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:51:06,927 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:51:06,938 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:51:06,939 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:51:06,940 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:51:06,940 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:51:06,941 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:51:06,941 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:51:06,942 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:51:06,942 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:51:06,943 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:51:06,943 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:51:06,944 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:51:06,944 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:51:06,945 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:51:06,945 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:51:06,977 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:51:07,067 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:51:07,068 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:51:07,108 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:51:07,159 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:51:07,160 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:51:07,220 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:51:07,466 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:51:07,477 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:51:07,489 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:51:07,495 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.876 seconds (process running for 3.286)
2023-11-16 21:51:07,507 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:51:07,507 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:51:07,539 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 21:51:07,545 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1154300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    125000 nanoseconds spent preparing 3 JDBC statements;
    3340600 nanoseconds spent executing 3 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:51:07,546 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:51:07,558 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.StackOverflowError: null
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
2023-11-16 21:51:07,577 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:51:07,590 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:51:07,600 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:52:29,837 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:52:29,867 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 24432 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:52:29,868 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:52:29,899 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:52:29,900 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:52:30,402 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:52:30,445 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 37 ms. Found 2 JPA repository interfaces.
2023-11-16 21:52:30,994 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:52:30,994 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:52:30,995 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:52:30,998 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:52:31,003 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:52:31,005 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:52:31,005 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:52:31,052 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:52:31,053 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1152 ms
2023-11-16 21:52:31,081 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:52:31,081 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:52:31,081 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:52:31,190 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d642d7b
2023-11-16 21:52:31,191 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:52:31,201 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:52:31,298 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:52:31,331 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:52:31,332 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:52:31,414 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:52:31,495 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:52:31,701 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:52:32,159 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:52:32,171 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:52:32,171 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:52:32,172 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:52:32,173 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:52:32,174 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:52:32,174 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:52:32,175 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:52:32,175 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:52:32,176 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:52:32,176 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:52:32,177 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:52:32,177 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:52:32,178 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:52:32,178 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:52:32,210 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:52:32,319 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:52:32,319 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:52:32,362 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:52:32,417 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:52:32,418 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:52:32,477 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:52:32,745 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:52:32,758 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:52:32,775 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:52:32,783 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.282 seconds (process running for 3.73)
2023-11-16 21:52:32,797 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:52:32,797 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:52:32,834 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 36
2023-11-16 21:52:32,843 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 21:52:32,849 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    941200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    204100 nanoseconds spent preparing 6 JDBC statements;
    6641100 nanoseconds spent executing 6 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:52:32,852 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:52:32,866 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.StackOverflowError: null
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:120)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
2023-11-16 21:52:32,884 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:52:32,897 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:52:32,906 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:53:55,079 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:53:55,103 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 1940 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:53:55,104 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:53:55,133 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:53:55,133 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:53:55,541 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:53:55,579 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 21:53:55,995 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:53:55,995 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:53:55,995 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:53:55,998 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:53:56,002 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:53:56,004 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:53:56,004 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:53:56,043 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:53:56,044 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 910 ms
2023-11-16 21:53:56,069 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:53:56,070 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:53:56,070 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:53:56,166 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:53:56,167 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:53:56,175 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:53:56,259 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:53:56,294 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:53:56,295 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:53:56,379 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:53:56,465 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:53:56,676 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:53:57,193 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:53:57,207 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:53:57,207 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:53:57,208 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:53:57,208 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:53:57,209 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:53:57,210 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:53:57,210 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:53:57,210 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:53:57,211 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:53:57,211 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:53:57,213 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:53:57,213 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:53:57,213 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:53:57,213 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:53:57,252 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:53:57,360 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:53:57,361 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:53:57,403 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:53:57,455 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:53:57,455 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:53:57,516 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:53:57,776 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:53:57,790 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:53:57,806 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:53:57,813 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.057 seconds (process running for 3.479)
2023-11-16 21:53:57,825 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:53:57,826 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:53:57,860 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 34
2023-11-16 21:53:57,868 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:53:57,876 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1052700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    194600 nanoseconds spent preparing 6 JDBC statements;
    5608700 nanoseconds spent executing 6 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:53:57,878 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 21:53:57,891 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.StackOverflowError: null
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Author.hashCode(Author.java:9)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
	at com.example.springpractice.persistence.entities.Book.hashCode(Book.java:10)
	at java.base/java.util.AbstractSet.hashCode(AbstractSet.java:124)
	at org.hibernate.collection.spi.PersistentSet.hashCode(PersistentSet.java:413)
2023-11-16 21:53:57,911 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:53:57,924 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 21:53:57,936 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 21:54:17,892 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:54:17,919 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 26216 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:54:17,920 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:54:17,949 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:54:17,949 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:54:18,357 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:54:18,394 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 21:54:18,803 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:54:18,804 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:54:18,804 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:54:18,807 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:54:18,812 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:54:18,813 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:54:18,813 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:54:18,853 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:54:18,853 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 903 ms
2023-11-16 21:54:18,874 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:54:18,875 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:54:18,875 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:54:18,967 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d642d7b
2023-11-16 21:54:18,968 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:54:18,976 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:54:19,056 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:54:19,089 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:54:19,091 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:54:19,173 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:54:19,254 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:54:19,440 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:54:19,956 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:54:19,971 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:54:19,971 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:54:19,972 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:54:19,972 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:54:19,973 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:54:19,973 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:54:19,974 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:54:19,974 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:54:19,975 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:54:19,976 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:54:19,976 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:54:19,977 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:54:19,977 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:54:19,977 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:54:20,018 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:54:20,130 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:54:20,131 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:54:20,195 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:54:20,250 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:54:20,251 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:54:20,307 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:54:20,549 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:54:20,562 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:54:20,575 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:54:20,581 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.003 seconds (process running for 3.412)
2023-11-16 21:54:20,592 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 2
2023-11-16 21:54:20,592 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:54:20,623 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 31
2023-11-16 21:54:20,631 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 7
2023-11-16 21:54:20,644 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 21:54:20,714 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1242700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    368000 nanoseconds spent preparing 9 JDBC statements;
    5226100 nanoseconds spent executing 6 JDBC statements;
    21521300 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    66781100 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:57:04,915 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 21:57:04,916 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 21:57:04,917 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 21:57:05,112 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    2488700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    97800 nanoseconds spent preparing 1 JDBC statements;
    2298700 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    15400 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:57:23,056 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    1274800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    38800 nanoseconds spent preparing 1 JDBC statements;
    2041300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    5300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:10,953 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:58:10,973 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:58:12,934 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:58:16,383 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:58:16,409 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 3776 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:58:16,411 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:58:16,441 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:58:16,441 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:58:16,869 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:58:16,908 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 21:58:17,340 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:58:17,341 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:58:17,341 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:58:17,343 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:58:17,348 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:58:17,349 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:58:17,350 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:58:17,391 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:58:17,391 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 950 ms
2023-11-16 21:58:17,413 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:58:17,414 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:58:17,414 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:58:17,515 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 21:58:17,516 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:58:17,524 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:58:17,606 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:58:17,640 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:58:17,641 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:58:17,727 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:58:17,814 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:58:18,009 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:58:18,510 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:58:18,525 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:58:18,525 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:58:18,526 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:58:18,526 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:58:18,527 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:58:18,528 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:58:18,529 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:58:18,529 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:58:18,530 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:58:18,530 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:58:18,531 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:58:18,532 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:58:18,534 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:58:18,534 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:58:18,576 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:58:18,672 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:18,672 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:18,712 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:18,773 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:18,774 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:18,852 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:58:19,151 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:58:19,166 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:58:19,180 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:58:19,187 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.16 seconds (process running for 3.638)
2023-11-16 21:58:19,199 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:58:19,200 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:58:19,237 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 37
2023-11-16 21:58:19,247 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 21:58:19,263 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 21:58:19,354 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1556200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    484100 nanoseconds spent preparing 9 JDBC statements;
    6938600 nanoseconds spent executing 6 JDBC statements;
    30293700 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    86261500 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:22,421 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 21:58:22,421 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 21:58:22,422 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 21:58:22,579 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    1257800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    77900 nanoseconds spent preparing 1 JDBC statements;
    2960100 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    16300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:24,356 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    1150100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    45800 nanoseconds spent preparing 1 JDBC statements;
    1294900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    6000 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:58:59,769 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:58:59,790 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:59:01,109 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:59:03,160 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:59:03,184 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25740 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:59:03,184 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:59:03,213 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:59:03,213 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:59:03,608 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:59:03,646 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 21:59:04,067 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:59:04,068 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:59:04,068 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:59:04,070 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:59:04,075 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:59:04,076 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:59:04,077 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:59:04,116 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:59:04,117 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 902 ms
2023-11-16 21:59:04,140 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:59:04,140 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:59:04,140 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:59:04,237 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:59:04,238 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:59:04,246 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:59:04,326 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:59:04,363 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:59:04,365 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:59:04,447 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:59:04,528 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:59:04,720 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:59:05,152 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:59:05,163 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:05,164 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:59:05,165 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:05,165 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:59:05,166 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:05,166 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:59:05,167 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:05,167 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:59:05,168 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:05,168 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:59:05,169 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:05,169 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:59:05,169 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:05,169 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:59:05,200 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:59:05,287 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:05,288 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:05,334 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:05,387 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:05,388 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:05,448 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:59:05,695 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:59:05,708 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:59:05,721 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:59:05,727 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.904 seconds (process running for 3.377)
2023-11-16 21:59:05,738 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:59:05,738 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:59:05,771 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 21:59:05,779 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 21:59:05,795 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 21:59:05,871 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    861200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    442600 nanoseconds spent preparing 9 JDBC statements;
    6290400 nanoseconds spent executing 6 JDBC statements;
    21271000 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    72721800 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:08,003 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 21:59:08,003 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 21:59:08,004 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 21:59:08,148 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    1654200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    57200 nanoseconds spent preparing 1 JDBC statements;
    1453100 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    140300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:26,047 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:59:26,066 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 21:59:27,619 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 21:59:30,713 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 21:59:30,739 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 28148 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 21:59:30,740 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 21:59:30,770 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 21:59:30,770 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 21:59:31,175 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 21:59:31,215 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 36 ms. Found 2 JPA repository interfaces.
2023-11-16 21:59:31,618 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 21:59:31,618 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 21:59:31,619 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 21:59:31,621 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 21:59:31,626 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 21:59:31,627 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 21:59:31,627 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 21:59:31,667 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 21:59:31,668 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 897 ms
2023-11-16 21:59:31,693 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 21:59:31,693 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 21:59:31,693 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 21:59:31,786 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 21:59:31,788 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 21:59:31,795 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 21:59:31,874 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 21:59:31,909 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 21:59:31,910 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 21:59:31,993 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:59:32,074 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 21:59:32,269 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 21:59:32,698 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 21:59:32,711 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:32,711 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:59:32,712 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:32,712 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 21:59:32,713 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:32,713 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 21:59:32,714 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:32,714 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 21:59:32,715 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:32,715 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 21:59:32,716 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:32,716 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 21:59:32,717 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 21:59:32,717 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 21:59:32,747 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 21:59:32,834 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:32,835 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:32,878 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:32,935 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:32,936 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:33,007 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 21:59:33,260 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 21:59:33,271 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 21:59:33,286 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 21:59:33,293 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.897 seconds (process running for 3.314)
2023-11-16 21:59:33,303 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 21:59:33,304 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 21:59:33,337 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 21:59:33,346 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 21:59:33,359 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 21:59:33,437 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    848700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    533400 nanoseconds spent preparing 9 JDBC statements;
    5788200 nanoseconds spent executing 6 JDBC statements;
    21506900 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    73497400 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 21:59:43,394 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 21:59:43,394 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 21:59:43,395 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 21:59:43,534 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    1638500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    73000 nanoseconds spent preparing 1 JDBC statements;
    1655500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    20100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:00:21,495 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    1596400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    33600 nanoseconds spent preparing 1 JDBC statements;
    2117400 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:18,608 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:01:18,631 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:01:20,407 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:01:23,576 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:01:23,601 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 28296 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:01:23,602 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:01:23,634 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:01:23,634 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:01:24,036 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:01:24,074 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 22:01:24,489 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:01:24,490 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:01:24,490 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:01:24,493 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:01:24,497 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:01:24,498 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:01:24,499 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:01:24,540 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:01:24,540 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 906 ms
2023-11-16 22:01:24,564 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:01:24,565 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:01:24,565 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:01:24,663 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 22:01:24,665 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:01:24,672 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:01:24,751 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:01:24,785 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:01:24,787 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:01:24,868 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:01:24,948 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:01:25,135 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:01:25,563 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:01:25,575 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:01:25,575 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:01:25,576 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:01:25,576 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:01:25,577 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:01:25,577 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:01:25,578 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:01:25,578 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:01:25,579 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:01:25,579 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:01:25,580 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:01:25,580 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:01:25,581 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:01:25,581 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:01:25,612 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:01:25,700 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:25,701 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:25,749 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:25,794 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:25,795 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:25,849 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:01:26,089 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:01:26,100 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:01:26,113 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:01:26,119 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.877 seconds (process running for 3.304)
2023-11-16 22:01:26,129 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:01:26,130 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:01:26,159 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 29
2023-11-16 22:01:26,169 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 22:01:26,185 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 22:01:26,263 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1027700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    449400 nanoseconds spent preparing 9 JDBC statements;
    5032000 nanoseconds spent executing 6 JDBC statements;
    21848300 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    74716000 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:28,678 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:01:28,679 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:01:28,680 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 22:01:28,818 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    1144500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    57100 nanoseconds spent preparing 1 JDBC statements;
    1553600 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    13200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:01:40,655 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    1323800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    2626300 nanoseconds spent preparing 110 JDBC statements;
    102434900 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:02:37,374 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:02:37,393 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:02:38,193 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:02:41,368 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:02:41,394 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 15120 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:02:41,395 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:02:41,426 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:02:41,426 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:02:41,834 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:02:41,871 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32 ms. Found 2 JPA repository interfaces.
2023-11-16 22:02:42,283 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:02:42,283 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:02:42,283 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:02:42,286 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:02:42,290 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:02:42,291 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:02:42,292 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:02:42,334 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:02:42,334 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 907 ms
2023-11-16 22:02:42,356 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:02:42,356 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:02:42,356 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:02:42,455 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 22:02:42,457 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:02:42,464 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:02:42,546 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:02:42,581 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:02:42,582 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:02:42,664 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:02:42,744 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:02:42,935 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:02:43,367 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:02:43,379 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:02:43,380 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:02:43,381 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:02:43,381 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:02:43,382 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:02:43,382 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:02:43,383 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:02:43,383 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:02:43,384 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:02:43,384 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:02:43,385 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:02:43,385 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:02:43,386 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:02:43,386 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:02:43,417 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:02:43,504 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:02:43,505 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:02:43,550 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:02:43,601 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:02:43,602 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:02:43,660 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:02:43,916 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:02:43,929 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:02:43,942 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:02:43,949 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.906 seconds (process running for 3.336)
2023-11-16 22:02:43,960 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 0
2023-11-16 22:02:43,961 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:02:43,994 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 33
2023-11-16 22:02:44,004 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 22:02:44,018 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 22:02:44,097 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    815700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    451700 nanoseconds spent preparing 9 JDBC statements;
    6276700 nanoseconds spent executing 6 JDBC statements;
    21990000 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    75128700 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:02:56,725 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:02:56,726 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:02:56,727 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 22:02:57,084 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    1541800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    2905300 nanoseconds spent preparing 110 JDBC statements;
    103505300 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    18200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:04:52,278 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-4] Session Metrics {
    1590400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    1640100 nanoseconds spent preparing 110 JDBC statements;
    72992500 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:12,741 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:05:12,760 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:05:16,124 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:05:18,164 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:05:18,191 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 23580 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:05:18,192 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:05:18,223 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:05:18,224 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:05:18,616 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:05:18,654 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 22:05:19,065 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:05:19,066 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:05:19,066 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:05:19,068 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:05:19,073 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:05:19,075 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:05:19,075 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:05:19,115 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:05:19,116 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 892 ms
2023-11-16 22:05:19,142 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:05:19,142 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:05:19,142 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:05:19,238 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 22:05:19,239 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:05:19,246 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:05:19,335 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:05:19,372 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:05:19,373 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:05:19,465 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:05:19,556 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:05:19,757 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:05:20,213 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:05:20,216 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:05:20,319 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:20,320 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:20,374 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:20,430 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:20,431 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:20,493 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:05:20,754 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:05:20,766 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:05:20,780 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:05:20,786 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.962 seconds (process running for 3.414)
2023-11-16 22:05:20,796 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:05:20,797 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:05:20,810 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] SQL Error: 0, SQLState: 42P01
2023-11-16 22:05:20,811 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [restartedMain] ERROR: relation "books_seq" does not exist
  Position: 16
2023-11-16 22:05:20,818 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    663600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    73700 nanoseconds spent preparing 1 JDBC statements;
    3683500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:20,820 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 22:05:20,832 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:319)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springpractice.SpringPracticeApplication.main(SpringPracticeApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet [ERROR: relation "books_seq" does not exist
  Position: 16] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy120.saveAll(Unknown Source)
	at com.example.springpractice.services.BookService.saveAll(BookService.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.springpractice.logging.performance.aspects.LogTimeAspect.logTimeElapsed(LogTimeAspect.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.springpractice.services.BookService$$SpringCGLIB$$0.saveAll(<generated>)
	at com.example.springpractice.config.DBInitializer.run(DBInitializer.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.springpractice.config.DBInitializer$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:771)
	... 10 common frames omitted
Caused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet [ERROR: relation "books_seq" does not exist
  Position: 16] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:89)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:67)
	at org.hibernate.id.enhanced.SequenceStructure$1.getNextValue(SequenceStructure.java:102)
	at org.hibernate.id.enhanced.PooledOptimizer.generate(PooledOptimizer.java:72)
	at org.hibernate.id.enhanced.SequenceStyleGenerator.generate(SequenceStyleGenerator.java:542)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:120)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy4/jdk.proxy4.$Proxy117.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:617)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:643)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 64 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: relation "books_seq" does not exist
  Position: 16
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	... 105 common frames omitted
2023-11-16 22:05:20,848 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:05:20,850 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 22:05:20,881 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 22:05:41,465 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:05:41,491 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 19176 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:05:41,492 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:05:41,521 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:05:41,521 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:05:41,954 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:05:41,994 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2023-11-16 22:05:42,428 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:05:42,429 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:05:42,429 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:05:42,431 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:05:42,436 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:05:42,438 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:05:42,438 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:05:42,481 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:05:42,482 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 960 ms
2023-11-16 22:05:42,517 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:05:42,517 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:05:42,517 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:05:42,634 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6cccb
2023-11-16 22:05:42,636 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:05:42,645 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:05:42,735 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:05:42,771 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:05:42,773 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:05:42,860 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:05:42,953 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:05:43,153 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:05:43,605 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:05:43,617 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:05:43,618 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:05:43,619 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:05:43,619 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:05:43,620 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:05:43,620 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:05:43,621 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:05:43,621 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:05:43,622 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:05:43,622 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:05:43,623 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:05:43,623 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:05:43,624 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:05:43,624 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:05:43,654 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:05:43,748 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:43,749 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:43,796 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:43,847 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:43,848 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:05:43,910 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:05:44,174 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:05:44,185 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:05:44,199 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:05:44,207 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.074 seconds (process running for 3.526)
2023-11-16 22:05:44,218 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 2
2023-11-16 22:05:44,218 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:05:44,251 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 22:05:44,261 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 22:05:44,275 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 14
2023-11-16 22:05:44,360 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1020600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    441700 nanoseconds spent preparing 9 JDBC statements;
    6665700 nanoseconds spent executing 6 JDBC statements;
    24177600 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    80328800 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:06:48,705 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:06:48,726 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:06:51,121 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:06:54,414 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:06:54,441 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 26892 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:06:54,442 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:06:54,471 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:06:54,472 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:06:54,884 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:06:54,921 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 22:06:55,340 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:06:55,340 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:06:55,340 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:06:55,344 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:06:55,348 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:06:55,349 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:06:55,349 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:06:55,391 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:06:55,392 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 919 ms
2023-11-16 22:06:55,415 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:06:55,415 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:06:55,415 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:06:55,518 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 22:06:55,519 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:06:55,527 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:06:55,608 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:06:55,643 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:06:55,644 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:06:55,727 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:06:55,809 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:06:56,003 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:06:56,459 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:06:56,473 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:06:56,473 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:06:56,474 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:06:56,475 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:06:56,476 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:06:56,476 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:06:56,477 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:06:56,477 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:06:56,478 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:06:56,478 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:06:56,480 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:06:56,480 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:06:56,481 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:06:56,481 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:06:56,514 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:06:56,608 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:06:56,609 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:06:56,655 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:06:56,758 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:06:56,760 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:06:56,861 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:06:57,202 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:06:57,214 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:06:57,227 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:06:57,234 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.144 seconds (process running for 3.575)
2023-11-16 22:06:57,245 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:06:57,246 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:06:57,281 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 35
2023-11-16 22:06:57,290 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 22:06:57,305 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 14
2023-11-16 22:06:57,394 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    861500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    420200 nanoseconds spent preparing 9 JDBC statements;
    6171900 nanoseconds spent executing 6 JDBC statements;
    25011800 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    84836600 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:07:09,929 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:07:09,929 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:07:09,930 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 0 ms
2023-11-16 22:07:10,255 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    1357100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    2326700 nanoseconds spent preparing 110 JDBC statements;
    95134900 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    13400 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:07:55,806 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:07:55,826 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:07:59,106 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:08:02,351 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:08:02,378 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25340 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:08:02,379 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:08:02,410 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:08:02,410 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:08:02,847 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:08:02,889 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 37 ms. Found 2 JPA repository interfaces.
2023-11-16 22:08:03,367 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:08:03,367 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:08:03,367 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:08:03,370 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:08:03,375 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:08:03,377 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:08:03,377 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:08:03,431 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:08:03,432 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1020 ms
2023-11-16 22:08:03,464 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:08:03,465 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:08:03,465 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:08:03,581 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 22:08:03,584 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:08:03,595 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:08:03,712 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:08:03,749 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:08:03,750 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:08:03,845 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:08:03,938 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:08:04,129 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:08:04,631 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:08:04,646 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:04,646 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:08:04,648 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:04,648 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:08:04,650 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:04,650 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:08:04,651 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:04,651 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:08:04,652 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:04,652 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:08:04,654 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:04,655 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:08:04,656 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:04,656 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:08:04,693 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:08:04,798 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:04,799 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:04,847 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:04,897 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:04,898 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:04,954 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:08:05,240 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:08:05,256 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:08:05,273 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:08:05,280 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 3.266 seconds (process running for 3.761)
2023-11-16 22:08:05,294 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:08:05,295 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:08:05,343 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 48
2023-11-16 22:08:05,355 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 22:08:05,375 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 18
2023-11-16 22:08:05,407 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:08:05,407 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:08:05,407 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 0 ms
2023-11-16 22:08:05,472 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1441100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    587600 nanoseconds spent preparing 9 JDBC statements;
    9193200 nanoseconds spent executing 6 JDBC statements;
    28832300 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    92235400 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:05,797 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    1047700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    2738000 nanoseconds spent preparing 110 JDBC statements;
    99329200 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    16000 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:33,117 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:08:33,136 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:08:37,253 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:08:40,503 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:08:40,527 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 1612 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:08:40,528 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:08:40,558 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:08:40,558 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:08:40,967 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:08:41,005 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 33 ms. Found 2 JPA repository interfaces.
2023-11-16 22:08:41,442 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:08:41,442 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:08:41,442 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:08:41,445 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:08:41,448 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:08:41,451 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:08:41,451 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:08:41,491 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:08:41,492 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 934 ms
2023-11-16 22:08:41,514 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:08:41,515 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:08:41,515 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:08:41,616 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 22:08:41,617 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:08:41,625 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:08:41,707 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:08:41,740 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:08:41,742 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:08:41,827 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:08:41,909 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:08:42,098 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:08:42,533 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:08:42,547 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:42,547 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:08:42,548 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:42,548 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:08:42,549 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:42,549 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:08:42,550 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:42,550 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:08:42,551 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:42,551 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:08:42,552 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:42,552 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:08:42,553 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:08:42,553 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:08:42,584 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:08:42,678 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:42,679 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:42,723 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:42,768 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:42,769 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:08:42,825 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:08:43,080 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:08:43,093 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:08:43,106 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:08:43,112 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.941 seconds (process running for 3.378)
2023-11-16 22:08:43,123 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:08:43,123 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:08:43,156 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 32
2023-11-16 22:08:43,166 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 9
2023-11-16 22:08:43,184 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 17
2023-11-16 22:08:43,262 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1158800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    467000 nanoseconds spent preparing 9 JDBC statements;
    6092300 nanoseconds spent executing 6 JDBC statements;
    21790500 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    75034900 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:09:01,121 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:09:01,122 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:09:01,122 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 0 ms
2023-11-16 22:09:01,259 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    1348100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    56800 nanoseconds spent preparing 1 JDBC statements;
    1373000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    49900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:09:03,124 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-4] Session Metrics {
    1157300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    52500 nanoseconds spent preparing 1 JDBC statements;
    1252000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    5300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:09:19,357 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    1334200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    4009800 nanoseconds spent preparing 110 JDBC statements;
    134749600 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    4000 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:09:31,385 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-5] Session Metrics {
    1176800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    1698400 nanoseconds spent preparing 110 JDBC statements;
    78879100 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:09:39,512 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-7] Session Metrics {
    1204800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    1082100 nanoseconds spent preparing 110 JDBC statements;
    81181200 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    5800 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:24,259 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:10:24,278 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:10:25,119 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:10:28,267 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:10:28,293 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25120 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:10:28,294 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:10:28,324 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:10:28,325 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:10:28,728 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:10:28,767 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2023-11-16 22:10:29,184 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:10:29,185 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:10:29,185 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:10:29,188 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:10:29,193 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:10:29,194 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:10:29,194 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:10:29,236 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:10:29,237 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 912 ms
2023-11-16 22:10:29,263 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:10:29,263 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:10:29,263 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:10:29,365 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 22:10:29,366 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:10:29,373 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:10:29,451 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:10:29,484 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:10:29,485 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:10:29,568 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:10:29,652 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:10:29,846 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:10:30,295 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:10:30,307 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:10:30,308 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:10:30,308 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:10:30,308 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:10:30,309 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:10:30,309 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:10:30,310 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:10:30,310 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:10:30,311 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:10:30,311 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:10:30,312 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:10:30,312 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:10:30,313 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:10:30,313 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:10:30,346 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:10:30,436 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:30,437 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:30,481 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:30,532 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:30,533 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:30,594 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:10:30,842 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:10:30,855 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:10:30,868 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:10:30,875 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 2.932 seconds (process running for 3.36)
2023-11-16 22:10:30,886 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:10:30,887 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:10:30,921 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 34
2023-11-16 22:10:30,929 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 8
2023-11-16 22:10:30,944 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 22:10:31,021 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    775000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    455500 nanoseconds spent preparing 9 JDBC statements;
    6180400 nanoseconds spent executing 6 JDBC statements;
    18679800 nanoseconds spent executing 8 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    73001700 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:35,439 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:10:35,439 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:10:35,440 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 22:10:35,591 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    1273500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    53000 nanoseconds spent preparing 1 JDBC statements;
    1506800 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    12300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:36,790 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    1175100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    26000 nanoseconds spent preparing 1 JDBC statements;
    867300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:39,568 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-4] Session Metrics {
    1272100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    22600 nanoseconds spent preparing 1 JDBC statements;
    871000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3500 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:42,600 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-7] Session Metrics {
    1242700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    36600 nanoseconds spent preparing 1 JDBC statements;
    1170600 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3500 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:10:54,603 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-6] Session Metrics {
    2153600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    2134600 nanoseconds spent preparing 107 JDBC statements;
    78747500 nanoseconds spent executing 107 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    3300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:13:43,668 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:13:43,703 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:13:48,192 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:13:53,563 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:13:53,632 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 17896 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:13:53,634 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:13:53,711 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:13:53,712 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:13:54,538 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:13:54,606 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 61 ms. Found 2 JPA repository interfaces.
2023-11-16 22:13:55,418 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:13:55,420 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:13:55,420 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:13:55,425 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:13:55,449 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:13:55,454 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:13:55,455 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:13:55,564 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:13:55,564 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1852 ms
2023-11-16 22:13:55,615 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:13:55,617 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:13:55,617 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:13:55,865 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25af7ee0
2023-11-16 22:13:55,869 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:13:55,886 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:13:56,161 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:13:56,273 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:13:56,278 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:13:56,566 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:13:56,799 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:13:57,218 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:13:58,013 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:13:58,032 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:13:58,033 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:13:58,034 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:13:58,034 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:13:58,035 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:13:58,036 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:13:58,037 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:13:58,037 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:13:58,038 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:13:58,038 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:13:58,040 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:13:58,040 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:13:58,041 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:13:58,041 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:13:58,094 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:13:58,227 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:13:58,228 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:13:58,303 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:13:58,369 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:13:58,371 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:13:58,455 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:13:58,854 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:13:58,873 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:13:58,892 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:13:58,901 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 6.089 seconds (process running for 6.886)
2023-11-16 22:13:58,916 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:13:58,917 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:13:58,967 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 49
2023-11-16 22:13:58,982 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 22:13:59,008 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 24
2023-11-16 22:13:59,140 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1158300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    584400 nanoseconds spent preparing 9 JDBC statements;
    9467900 nanoseconds spent executing 6 JDBC statements;
    38023500 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    121147200 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:14:11,871 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:14:11,871 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:14:11,873 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 22:14:12,192 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    2212800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    123400 nanoseconds spent preparing 1 JDBC statements;
    2766700 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    22500 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:17:07,757 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:17:07,790 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:17:11,373 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:17:16,511 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:17:16,556 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 28548 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:17:16,557 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:17:16,610 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:17:16,610 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:17:17,288 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:17:17,354 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2023-11-16 22:17:18,123 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:17:18,124 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:17:18,125 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:17:18,129 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:17:18,136 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:17:18,138 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:17:18,139 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:17:18,206 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:17:18,208 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1598 ms
2023-11-16 22:17:18,249 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:17:18,249 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:17:18,249 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:17:18,420 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3051b900
2023-11-16 22:17:18,422 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:17:18,435 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:17:18,568 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:17:18,624 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:17:18,627 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:17:18,780 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:17:18,936 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:17:19,267 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:17:20,064 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:17:20,086 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:17:20,086 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:17:20,088 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:17:20,088 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:17:20,090 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:17:20,091 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:17:20,092 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:17:20,092 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:17:20,094 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:17:20,094 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:17:20,097 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:17:20,097 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:17:20,098 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:17:20,099 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:17:20,153 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:17:20,310 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:17:20,312 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:17:20,395 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:17:20,481 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:17:20,482 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:17:20,585 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:17:21,010 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:17:21,033 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:17:21,058 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:17:21,070 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.134 seconds (process running for 5.89)
2023-11-16 22:17:21,088 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:17:21,089 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 1
2023-11-16 22:17:21,152 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 63
2023-11-16 22:17:21,168 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 22:17:21,197 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 27
2023-11-16 22:17:21,338 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1848000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    647700 nanoseconds spent preparing 9 JDBC statements;
    9108100 nanoseconds spent executing 6 JDBC statements;
    38995000 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    136539500 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:17:41,593 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:17:41,593 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:17:41,595 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 22:17:41,857 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    3976500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    73100 nanoseconds spent preparing 1 JDBC statements;
    4387000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    18100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:24:27,748 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:24:27,786 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:24:29,443 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:24:34,805 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:24:34,855 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25692 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:24:34,857 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:24:34,911 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:24:34,911 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:24:35,614 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:24:35,677 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 56 ms. Found 2 JPA repository interfaces.
2023-11-16 22:24:36,390 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:24:36,391 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:24:36,391 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:24:36,395 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:24:36,403 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:24:36,405 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:24:36,406 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:24:36,475 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:24:36,475 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1561 ms
2023-11-16 22:24:36,515 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:24:36,515 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:24:36,515 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:24:36,682 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3051b900
2023-11-16 22:24:36,684 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:24:36,698 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:24:36,827 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:24:36,891 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:24:36,893 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:24:37,040 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:24:37,195 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:24:37,532 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:24:38,300 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:24:38,319 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:24:38,319 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:24:38,322 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:24:38,323 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:24:38,324 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:24:38,324 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:24:38,326 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:24:38,326 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:24:38,328 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:24:38,328 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:24:38,330 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:24:38,330 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:24:38,332 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:24:38,332 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:24:38,389 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:24:38,519 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:24:38,520 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:24:38,576 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:24:38,648 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:24:38,650 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:24:38,723 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:24:39,044 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:24:39,059 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:24:39,076 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:24:39,085 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 4.89 seconds (process running for 5.647)
2023-11-16 22:24:39,098 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:24:39,099 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:24:39,144 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 45
2023-11-16 22:24:39,158 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 22:24:39,180 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 21
2023-11-16 22:24:39,296 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    933900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    500400 nanoseconds spent preparing 9 JDBC statements;
    7902100 nanoseconds spent executing 6 JDBC statements;
    34045800 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    111636500 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:24:57,839 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:24:57,877 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:25:01,012 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:25:06,610 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:25:06,655 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25604 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:25:06,656 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:25:06,711 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:25:06,711 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:25:07,454 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:25:07,534 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 70 ms. Found 2 JPA repository interfaces.
2023-11-16 22:25:08,411 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:25:08,411 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:25:08,411 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:25:08,418 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:25:08,431 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:25:08,435 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:25:08,435 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:25:08,530 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:25:08,533 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1820 ms
2023-11-16 22:25:08,588 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:25:08,591 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:25:08,591 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:25:08,789 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5987ff03
2023-11-16 22:25:08,791 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:25:08,804 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:25:08,936 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:25:09,010 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:25:09,015 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:25:09,171 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:25:09,303 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:25:09,604 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:25:10,316 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:25:10,336 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:25:10,337 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:25:10,338 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:25:10,339 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:25:10,340 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:25:10,341 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:25:10,343 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:25:10,343 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:25:10,344 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:25:10,345 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:25:10,346 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:25:10,347 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:25:10,348 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:25:10,348 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:25:10,398 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:25:10,531 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:25:10,532 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:25:10,607 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:25:10,677 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:25:10,679 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:25:10,764 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:25:11,111 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:25:11,130 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:25:11,149 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:25:11,158 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.152 seconds (process running for 5.924)
2023-11-16 22:25:11,175 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:25:11,176 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:25:11,225 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 48
2023-11-16 22:25:11,239 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 22:25:11,260 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 20
2023-11-16 22:25:11,396 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1880300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    718100 nanoseconds spent preparing 9 JDBC statements;
    8735500 nanoseconds spent executing 6 JDBC statements;
    39651200 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    130315000 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:25:26,538 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:25:26,538 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:25:26,539 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 22:25:26,804 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    2234300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    100800 nanoseconds spent preparing 1 JDBC statements;
    2649500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    22200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:26:12,902 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    1906600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    4345000 nanoseconds spent preparing 110 JDBC statements;
    183140900 nanoseconds spent executing 110 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    4700 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:29:59,360 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:29:59,397 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:30:03,757 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:30:09,300 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:30:09,344 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 13180 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:30:09,345 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:30:09,399 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:30:09,399 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:30:10,065 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:30:10,128 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
2023-11-16 22:30:10,860 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:30:10,861 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:30:10,861 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:30:10,867 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:30:10,875 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:30:10,877 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:30:10,878 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:30:10,954 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:30:10,954 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1555 ms
2023-11-16 22:30:10,992 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:30:10,992 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:30:10,993 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:30:11,162 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25d4bf04
2023-11-16 22:30:11,164 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:30:11,178 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:30:11,303 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:30:11,358 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:30:11,363 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:30:11,520 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:30:11,667 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:30:11,986 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:30:12,768 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:30:12,792 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:12,793 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:30:12,794 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:12,794 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:30:12,796 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:12,797 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:30:12,798 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:12,798 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:30:12,800 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:12,800 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:30:12,802 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:12,802 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:30:12,804 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:12,804 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:30:12,858 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:30:13,011 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:13,013 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:13,100 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:13,174 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:13,175 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:13,263 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:30:13,628 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:30:13,643 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:30:13,662 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:30:13,671 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 4.961 seconds (process running for 5.714)
2023-11-16 22:30:13,686 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:30:13,686 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:30:13,729 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 42
2023-11-16 22:30:13,742 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 22:30:13,746 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1444800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    273100 nanoseconds spent preparing 6 JDBC statements;
    7572600 nanoseconds spent executing 6 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:13,749 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 22:30:13,766 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:319)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springpractice.SpringPracticeApplication.main(SpringPracticeApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IndexOutOfBoundsException: Index 100 out of bounds for length 100
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at com.example.springpractice.config.DBInitializer.getRandomBooks(DBInitializer.java:49)
	at com.example.springpractice.config.DBInitializer.associateRandomBooksToAuthors(DBInitializer.java:41)
	at com.example.springpractice.config.DBInitializer.run(DBInitializer.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.springpractice.config.DBInitializer$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:771)
	... 10 common frames omitted
2023-11-16 22:30:13,788 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:30:13,816 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 22:30:13,851 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 22:30:44,858 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:30:44,910 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 25008 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:30:44,912 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:30:44,969 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:30:44,970 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:30:45,713 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:30:45,798 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 75 ms. Found 2 JPA repository interfaces.
2023-11-16 22:30:46,764 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:30:46,766 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:30:46,766 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:30:46,771 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:30:46,781 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:30:46,783 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:30:46,783 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:30:46,868 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:30:46,868 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1897 ms
2023-11-16 22:30:46,921 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:30:46,923 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:30:46,923 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:30:47,153 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3051b900
2023-11-16 22:30:47,156 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:30:47,175 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:30:47,323 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:30:47,386 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:30:47,388 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:30:47,541 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:30:47,684 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:30:48,019 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:30:48,786 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:30:48,808 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:48,808 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:30:48,809 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:48,810 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:30:48,812 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:48,812 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:30:48,813 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:48,814 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:30:48,816 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:48,817 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:30:48,819 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:48,819 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:30:48,820 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:30:48,821 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:30:48,883 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:30:49,048 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:49,049 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:49,135 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:49,213 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:49,215 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:49,321 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:30:49,735 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:30:49,754 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:30:49,782 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:30:49,793 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.596 seconds (process running for 6.379)
2023-11-16 22:30:49,811 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 2
2023-11-16 22:30:49,812 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:30:49,871 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 58
2023-11-16 22:30:49,889 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 17
2023-11-16 22:30:49,894 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1768100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    311300 nanoseconds spent preparing 6 JDBC statements;
    9340100 nanoseconds spent executing 6 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:30:49,896 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-16 22:30:49,917 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:319)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springpractice.SpringPracticeApplication.main(SpringPracticeApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IndexOutOfBoundsException: Index 100 out of bounds for length 100
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at com.example.springpractice.config.DBInitializer.getRandomBooks(DBInitializer.java:49)
	at com.example.springpractice.config.DBInitializer.associateRandomBooksToAuthors(DBInitializer.java:41)
	at com.example.springpractice.config.DBInitializer.run(DBInitializer.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.springpractice.config.DBInitializer$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:771)
	... 10 common frames omitted
2023-11-16 22:30:49,945 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:30:49,980 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-16 22:30:50,021 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-16 22:32:29,576 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:32:29,628 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 27272 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:32:29,630 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:32:29,689 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:32:29,690 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:32:30,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:32:30,504 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2023-11-16 22:32:31,339 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:32:31,340 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:32:31,341 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:32:31,345 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:32:31,354 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:32:31,356 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:32:31,356 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:32:31,429 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:32:31,430 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1739 ms
2023-11-16 22:32:31,475 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:32:31,475 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:32:31,475 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:32:31,669 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2631cdc0
2023-11-16 22:32:31,671 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:32:31,683 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:32:31,830 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:32:31,889 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:32:31,892 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:32:32,045 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:32:32,198 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:32:32,537 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:32:33,294 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:32:33,315 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:32:33,315 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:32:33,317 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:32:33,317 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:32:33,318 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:32:33,319 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:32:33,320 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:32:33,321 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:32:33,322 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:32:33,322 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:32:33,324 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:32:33,324 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:32:33,326 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:32:33,326 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:32:33,374 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:32:33,519 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:32:33,520 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:32:33,590 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:32:33,660 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:32:33,661 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:32:33,740 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:32:34,078 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:32:34,094 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:32:34,112 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:32:34,120 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.194 seconds (process running for 5.933)
2023-11-16 22:32:34,135 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:32:34,135 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:32:34,179 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 43
2023-11-16 22:32:34,193 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 22:32:34,220 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 26
2023-11-16 22:32:34,337 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1367600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    474600 nanoseconds spent preparing 9 JDBC statements;
    7680200 nanoseconds spent executing 6 JDBC statements;
    34277200 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    111650500 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:32:47,992 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:32:47,993 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:32:47,994 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 22:32:48,276 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    2107200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    101400 nanoseconds spent preparing 1 JDBC statements;
    4124700 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    21500 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:33:03,712 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    3397500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    15939600 nanoseconds spent preparing 349 JDBC statements;
    709116900 nanoseconds spent executing 349 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    4100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:33:16,563 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-4] Session Metrics {
    1930600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    12090100 nanoseconds spent preparing 349 JDBC statements;
    623567300 nanoseconds spent executing 349 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    6000 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:34:43,998 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:34:44,028 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:34:46,431 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:34:51,857 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:34:51,906 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 6620 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:34:51,908 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:34:51,967 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:34:51,968 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:34:52,709 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:34:52,775 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2023-11-16 22:34:53,556 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:34:53,557 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:34:53,558 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:34:53,563 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:34:53,572 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:34:53,574 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:34:53,574 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:34:53,657 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:34:53,658 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1689 ms
2023-11-16 22:34:53,703 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:34:53,703 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:34:53,703 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:34:53,891 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@652f34f2
2023-11-16 22:34:53,893 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:34:53,909 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:34:54,056 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:34:54,134 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:34:54,136 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:34:54,327 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:34:54,516 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:34:54,864 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:34:55,715 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:34:55,741 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:34:55,742 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:34:55,743 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:34:55,744 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:34:55,746 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:34:55,747 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:34:55,748 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:34:55,749 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:34:55,751 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:34:55,751 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:34:55,753 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:34:55,753 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:34:55,755 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:34:55,755 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:34:55,809 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:34:55,967 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:34:55,968 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:34:56,037 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:34:56,121 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:34:56,122 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:34:56,202 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:34:56,611 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:34:56,628 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:34:56,648 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:34:56,658 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.39 seconds (process running for 6.131)
2023-11-16 22:34:56,671 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:34:56,672 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:34:56,717 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 44
2023-11-16 22:34:56,730 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 22:34:56,749 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 17
2023-11-16 22:34:56,872 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1385300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    442800 nanoseconds spent preparing 9 JDBC statements;
    7662900 nanoseconds spent executing 6 JDBC statements;
    35095000 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    116579900 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:35:00,813 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:35:00,813 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:35:00,814 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 22:35:02,069 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    1931000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    14359700 nanoseconds spent preparing 345 JDBC statements;
    659314000 nanoseconds spent executing 345 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    40100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:39:55,728 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:39:55,767 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:39:59,425 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:40:04,908 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:40:04,954 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 22496 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:40:04,955 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:40:05,009 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:40:05,010 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:40:05,688 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:40:05,760 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 63 ms. Found 2 JPA repository interfaces.
2023-11-16 22:40:06,462 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:40:06,463 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:40:06,464 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:40:06,467 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:40:06,475 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:40:06,477 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:40:06,478 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:40:06,551 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:40:06,551 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1540 ms
2023-11-16 22:40:06,598 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:40:06,598 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:40:06,599 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:40:06,767 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6d89c71f
2023-11-16 22:40:06,770 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:40:06,781 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:40:06,953 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:40:07,027 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:40:07,031 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:40:07,193 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:40:07,341 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:40:07,629 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:40:08,239 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:40:08,257 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:08,257 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:40:08,259 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:08,259 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:40:08,260 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:08,260 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:40:08,261 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:08,262 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:40:08,263 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:08,264 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:40:08,265 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:08,265 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:40:08,266 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:08,266 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:40:08,314 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:40:08,437 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:08,438 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:08,495 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:08,572 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:08,573 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:08,644 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:40:08,979 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:40:08,995 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:40:09,012 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:40:09,022 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 4.691 seconds (process running for 5.476)
2023-11-16 22:40:09,038 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:40:09,039 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:40:09,088 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 49
2023-11-16 22:40:09,102 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 13
2023-11-16 22:40:09,119 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 17
2023-11-16 22:40:09,241 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1553100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    458900 nanoseconds spent preparing 9 JDBC statements;
    9273800 nanoseconds spent executing 6 JDBC statements;
    36220500 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    116628500 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:16,411 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:40:16,411 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:40:16,413 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 2 ms
2023-11-16 22:40:16,993 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8888-exec-1] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-16 22:40:16,996 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    2931700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    3556400 nanoseconds spent preparing 103 JDBC statements;
    166183200 nanoseconds spent executing 103 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    28600 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:16,999 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-11-16 22:40:17,051 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:19,850 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8888-exec-4] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-16 22:40:19,851 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-4] Session Metrics {
    1921800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    2755000 nanoseconds spent preparing 102 JDBC statements;
    156520600 nanoseconds spent executing 102 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    5700 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:19,852 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(UTF8JsonGenerator.java:1153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject(UTF8JsonGenerator.java:390)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:174)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-11-16 22:40:19,864 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-4] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:30,263 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8888-exec-6] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-16 22:40:30,264 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-6] Session Metrics {
    1992600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    1942000 nanoseconds spent preparing 102 JDBC statements;
    151433800 nanoseconds spent executing 102 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    4200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:30,264 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.Exception.<init>(Exception.java:85)
	at java.base/java.io.IOException.<init>(IOException.java:80)
	at com.fasterxml.jackson.core.JacksonException.<init>(JacksonException.java:26)
	at com.fasterxml.jackson.core.JsonProcessingException.<init>(JsonProcessingException.java:25)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:22)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:34)
	at com.fasterxml.jackson.databind.JsonMappingException.<init>(JsonMappingException.java:247)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:787)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-11-16 22:40:30,277 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-6] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:33,982 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:40:34,017 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:40:36,319 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:40:39,438 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:40:39,483 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 16328 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:40:39,485 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:40:39,539 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:40:39,539 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:40:40,220 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:40:40,291 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
2023-11-16 22:40:41,023 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:40:41,024 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:40:41,024 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:40:41,029 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:40:41,037 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:40:41,039 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:40:41,039 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:40:41,107 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:40:41,107 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1567 ms
2023-11-16 22:40:41,144 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:40:41,145 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:40:41,145 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:40:41,326 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3051b900
2023-11-16 22:40:41,328 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:40:41,341 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:40:41,523 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:40:41,599 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:40:41,603 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:40:41,787 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:40:41,953 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:40:42,287 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:40:43,070 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:40:43,093 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:43,093 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:40:43,096 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:43,096 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:40:43,098 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:43,098 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:40:43,101 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:43,101 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:40:43,103 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:43,103 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:40:43,106 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:43,106 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:40:43,107 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:40:43,108 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:40:43,171 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:40:43,332 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:43,333 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:43,417 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:43,510 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:43,511 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:43,611 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:40:43,980 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:40:43,994 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:40:44,011 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:40:44,021 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.164 seconds (process running for 5.919)
2023-11-16 22:40:44,036 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 2
2023-11-16 22:40:44,037 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:40:44,083 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 46
2023-11-16 22:40:44,097 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 14
2023-11-16 22:40:44,121 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 24
2023-11-16 22:40:44,247 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1515300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    500000 nanoseconds spent preparing 9 JDBC statements;
    7936500 nanoseconds spent executing 6 JDBC statements;
    35997600 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    121247600 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:47,502 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:40:47,502 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:40:47,503 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 22:40:48,058 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8888-exec-2] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-16 22:40:48,060 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    2635100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    3425500 nanoseconds spent preparing 103 JDBC statements;
    161495100 nanoseconds spent executing 103 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    19600 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:40:48,062 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-11-16 22:40:48,113 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:42:28,622 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:42:28,662 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:42:31,064 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:42:36,466 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:42:36,517 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 28152 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:42:36,518 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:42:36,578 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:42:36,579 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:42:37,286 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:42:37,358 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
2023-11-16 22:42:38,150 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:42:38,151 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:42:38,151 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:42:38,156 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:42:38,163 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:42:38,166 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:42:38,166 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:42:38,238 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:42:38,239 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1659 ms
2023-11-16 22:42:38,279 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:42:38,280 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:42:38,280 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:42:38,459 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@315a3bba
2023-11-16 22:42:38,461 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:42:38,475 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:42:38,607 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:42:38,662 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:42:38,663 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:42:38,821 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:42:38,998 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:42:39,324 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:42:40,246 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:42:40,277 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:42:40,277 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:42:40,279 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:42:40,279 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:42:40,281 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:42:40,282 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:42:40,283 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:42:40,283 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:42:40,285 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:42:40,285 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:42:40,287 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:42:40,288 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:42:40,290 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:42:40,290 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:42:40,357 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:42:40,552 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:42:40,554 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:42:40,623 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:42:40,685 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:42:40,687 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:42:40,762 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:42:41,099 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:42:41,117 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:42:41,141 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:42:41,150 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.286 seconds (process running for 6.115)
2023-11-16 22:42:41,164 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 2
2023-11-16 22:42:41,165 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 1
2023-11-16 22:42:41,211 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 46
2023-11-16 22:42:41,224 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 12
2023-11-16 22:42:41,244 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 19
2023-11-16 22:42:41,370 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1695900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    551700 nanoseconds spent preparing 9 JDBC statements;
    8104100 nanoseconds spent executing 6 JDBC statements;
    37665700 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    120436000 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:43:35,611 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:43:35,642 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:43:37,952 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:43:43,411 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:43:43,451 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 21432 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:43:43,452 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:43:43,495 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:43:43,495 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:43:44,051 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:43:44,116 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57 ms. Found 2 JPA repository interfaces.
2023-11-16 22:43:44,742 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:43:44,743 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:43:44,744 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:43:44,748 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:43:44,756 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:43:44,758 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:43:44,758 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:43:44,827 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:43:44,827 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1331 ms
2023-11-16 22:43:44,869 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:43:44,869 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:43:44,870 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:43:45,007 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@790119c
2023-11-16 22:43:45,010 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:43:45,020 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:43:45,134 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:43:45,183 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:43:45,185 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:43:45,313 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:43:45,434 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:43:45,704 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:43:46,324 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:43:46,345 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:43:46,346 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:43:46,347 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:43:46,347 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:43:46,349 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:43:46,349 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:43:46,351 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:43:46,351 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:43:46,352 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:43:46,353 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:43:46,354 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:43:46,355 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:43:46,357 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:43:46,357 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:43:46,404 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:43:46,528 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:43:46,529 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:43:46,603 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:43:46,693 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:43:46,694 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:43:46,769 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:43:47,113 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:43:47,129 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:43:47,146 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:43:47,156 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 4.261 seconds (process running for 5.055)
2023-11-16 22:43:47,170 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:43:47,170 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:43:47,214 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 43
2023-11-16 22:43:47,226 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 11
2023-11-16 22:43:47,247 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 20
2023-11-16 22:43:47,384 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1355800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    544300 nanoseconds spent preparing 9 JDBC statements;
    7688300 nanoseconds spent executing 6 JDBC statements;
    39413600 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    131151900 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:43:50,809 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:43:50,810 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:43:50,811 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 22:43:51,435 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    2394600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    3668400 nanoseconds spent preparing 101 JDBC statements;
    193526200 nanoseconds spent executing 101 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    63300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:36,322 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:44:36,355 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:44:39,502 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:44:45,338 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:44:45,375 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 17732 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:44:45,378 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:44:45,423 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:44:45,423 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:44:46,042 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:44:46,104 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 54 ms. Found 2 JPA repository interfaces.
2023-11-16 22:44:46,816 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:44:46,818 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:44:46,819 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:44:46,823 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:44:46,831 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:44:46,832 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:44:46,833 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:44:46,899 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:44:46,900 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1476 ms
2023-11-16 22:44:46,938 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:44:46,939 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:44:46,939 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:44:47,092 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5bbd14a3
2023-11-16 22:44:47,093 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:44:47,105 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:44:47,250 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:44:47,306 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:44:47,308 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:44:47,463 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:44:47,617 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:44:47,935 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:44:48,666 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:44:48,684 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:44:48,684 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:44:48,686 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:44:48,686 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:44:48,687 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:44:48,687 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:44:48,689 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:44:48,689 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:44:48,691 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:44:48,691 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:44:48,693 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:44:48,693 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:44:48,695 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:44:48,695 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:44:48,748 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:44:48,868 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:48,874 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:48,935 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:49,015 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:49,016 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:49,109 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:44:49,483 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:44:49,505 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:44:49,527 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:44:49,537 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 4.716 seconds (process running for 5.343)
2023-11-16 22:44:49,553 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:44:49,554 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:44:49,603 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 49
2023-11-16 22:44:49,618 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 14
2023-11-16 22:44:49,654 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 35
2023-11-16 22:44:49,783 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1765100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    580400 nanoseconds spent preparing 9 JDBC statements;
    9121500 nanoseconds spent executing 6 JDBC statements;
    34794200 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    123103200 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:52,459 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:44:52,459 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:44:52,460 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-1] Completed initialization in 1 ms
2023-11-16 22:44:52,660 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-1] Session Metrics {
    2284700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    97000 nanoseconds spent preparing 1 JDBC statements;
    2093500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    14900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:44:54,004 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-5] Session Metrics {
    1753100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    64700 nanoseconds spent preparing 1 JDBC statements;
    2868500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    7900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:45:18,721 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-4] Session Metrics {
    2579000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    179200 nanoseconds spent preparing 2 JDBC statements;
    6418000 nanoseconds spent executing 2 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    7000 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:45:49,313 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:45:49,345 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-16 22:45:52,056 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-16 22:45:57,224 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.1.Final
2023-11-16 22:45:57,273 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringPracticeApplication using Java 17.0.6 with PID 8524 (D:\work\codearmoury\spring-practice\target\classes started by KhaledHisham in D:\work\codearmoury\spring-practice)
2023-11-16 22:45:57,274 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "localrun"
2023-11-16 22:45:57,328 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-16 22:45:57,328 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-16 22:45:58,011 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-16 22:45:58,073 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
2023-11-16 22:45:58,810 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8888 (http)
2023-11-16 22:45:58,811 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] An older version [2.0.3] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [2.0.5]
2023-11-16 22:45:58,812 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Loaded Apache Tomcat Native library [2.0.3] using APR version [1.7.2].
2023-11-16 22:45:58,816 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] OpenSSL successfully initialized [OpenSSL 3.0.8 7 Feb 2023]
2023-11-16 22:45:58,823 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8888"]
2023-11-16 22:45:58,826 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-11-16 22:45:58,826 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-11-16 22:45:58,902 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-16 22:45:58,902 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1573 ms
2023-11-16 22:45:58,940 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-11-16 22:45:58,940 WARN com.zaxxer.hikari.HikariConfig [restartedMain] HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2023-11-16 22:45:58,941 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-16 22:45:59,120 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c4ddf04
2023-11-16 22:45:59,122 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-16 22:45:59,135 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://localhost:5432/library'
2023-11-16 22:45:59,275 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-16 22:45:59,336 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-16 22:45:59,338 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-16 22:45:59,489 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:45:59,644 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-16 22:45:59,971 INFO org.hibernate.bytecode.internal.BytecodeProviderInitiator [restartedMain] HHH000021: Bytecode provider name : bytebuddy
2023-11-16 22:46:00,763 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-16 22:46:00,783 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:46:00,783 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:46:00,784 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:46:00,784 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] relation "book_author" does not exist, skipping
2023-11-16 22:46:00,786 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:46:00,786 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "authors" does not exist, skipping
2023-11-16 22:46:00,787 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:46:00,787 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "book_author" does not exist, skipping
2023-11-16 22:46:00,789 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:46:00,789 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] table "books" does not exist, skipping
2023-11-16 22:46:00,790 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:46:00,791 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "authors_seq" does not exist, skipping
2023-11-16 22:46:00,792 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] SQL Warning Code: 0, SQLState: 00000
2023-11-16 22:46:00,792 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler [restartedMain] sequence "books_seq" does not exist, skipping
2023-11-16 22:46:00,843 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-16 22:46:00,980 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:46:00,981 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:46:01,047 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:46:01,131 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:46:01,132 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:46:01,213 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-16 22:46:01,568 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-16 22:46:01,587 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8888"]
2023-11-16 22:46:01,607 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8888 (http) with context path ''
2023-11-16 22:46:01,614 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringPracticeApplication in 5.003 seconds (process running for 5.736)
2023-11-16 22:46:01,630 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.generateRandomBooks(..) - Time Elapsed: 1
2023-11-16 22:46:01,631 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.generateRandomAuthors(..) - Time Elapsed: 0
2023-11-16 22:46:01,678 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] BookService.saveAll(..) - Time Elapsed: 47
2023-11-16 22:46:01,693 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 15
2023-11-16 22:46:01,716 INFO com.example.springpractice.logging.performance.aspects.LogTimeAspect [restartedMain] AuthorService.saveAll(..) - Time Elapsed: 22
2023-11-16 22:46:01,836 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [restartedMain] Session Metrics {
    1790300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    568300 nanoseconds spent preparing 9 JDBC statements;
    7922100 nanoseconds spent executing 6 JDBC statements;
    35064100 nanoseconds spent executing 10 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    114841000 nanoseconds spent executing 1 flushes (flushing a total of 200 entities and 200 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:46:08,579 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8888-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-16 22:46:08,579 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Initializing Servlet 'dispatcherServlet'
2023-11-16 22:46:08,581 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8888-exec-2] Completed initialization in 1 ms
2023-11-16 22:46:08,851 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-2] Session Metrics {
    1872500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    75800 nanoseconds spent preparing 1 JDBC statements;
    3840600 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    26200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2023-11-16 22:46:19,635 INFO org.hibernate.engine.internal.StatisticalLoggingSessionEventListener [http-nio-8888-exec-3] Session Metrics {
    2122100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    176300 nanoseconds spent preparing 3 JDBC statements;
    8285400 nanoseconds spent executing 3 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    4200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
